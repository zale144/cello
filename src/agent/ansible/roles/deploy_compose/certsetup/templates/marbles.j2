{
    "name": "orga-network",
    "x-type": "hlfv1",
    "version": "1.0.0",
    "client": {
    "organization": "{{ peerorgs[0] }}",
    "credentialStore": {
           "path": "/root/.hfc-key-store"
    },
    "connection": {
      "timeout": {
        "peer": { "endorser": "300", "eventHub": "300", "eventReg": "300"},
        "orderer": "300"
      }
    }
    },
    "channels": {
        "firstchannel": {
            "orderers": [
{% for orderer in allorderers %}
        "{{ orderer.name }}"{{ '' if loop.last else ',' }}
{% endfor %}
            ],
            "peers": {
{% for peer in allpeers %}
        "{{ peer.name }}": {
          "endorsingPeer": true, "chaincodeQuery": true, "eventSource": true
        }{{ '' if loop.last else ',' }}
{% endfor %}
            },
            "chaincodes": [
              "marbles:v4"
            ],
            "x-blockDelay": 1000
        }
    },
    "organizations": {
{% for org in allorgs %}
        "{{ org }}": {
            "mspid": "{{ org }}MSP",
            "peers": [
{% for peer in allpeers|selectattr('org', 'equalto', org)|list %}
        "{{ peer.name }}"{{ '' if loop.last else ',' }}
{% endfor %}
            ],
            "certificateAuthorities": [
{% for ca in allcas|selectattr('org', 'equalto', org)|list %}
        "{{ ca.name }}"{{ '' if loop.last else ',' }}
{% endfor %}
            ],
            "x-certJson": {
                "path": "/root/.hfc-key-store"
            },
            "signedCert": {
                  "path": "{{ '/fabriccerts/keyfiles/'+org+'/users/Admin@'+org+'/msp/admincerts/Admin@'+org+'-cert.pem' }}"
            },
            "adminPrivateKey": {
                  "path": "{{ '/fabriccerts/keyfiles/'+org+'/users/Admin@'+org+'/msp/keystore/admin_private.key' }}"
            }
        }{{ '' if loop.last else ',' }}
{% endfor %}
    },
  "orderers": {
{% for orderer in allorderers %}
    "{{ orderer.name }}": {
      "url": "{{ tls|ternary('grpcs','grpc') }}://{{ orderer.name }}:7050",
      "grpcOptions": {
        "ssl-target-name-override": "{{ orderer.name }}"
      },
      "tlsCACerts": {
        "pem": "{{ '/fabriccerts/run/keyfiles/'+orderer.org+'/orderers/'+orderer.name+'.'+orderer.org+'/tls/ca.crt' }}"
      }
    }{{ '' if loop.last else ',' }}
{% endfor %}
  },
  "peers": {
{% for peer in allpeers|selectattr('org', 'equalto', item)|list %}
    "{{ peer.name }}": {
      "url": "{{ tls|ternary('grpcs','grpc') }}://{{ peer.name }}:7051",
      "eventUrl": "{{ tls|ternary('grpcs','grpc') }}://{{ peer.name }}:7053",
      "grpcOptions": {
        "ssl-target-name-override": "{{ peer.name }}"
      },
      "tlsCACerts": {
        "pem": "{{ '/fabriccerts/run/keyfiles/'+peer.org+'/tlsca/tlsca.'+peer.org+'-cert.pem' }}"
      }
    }{{ '' if loop.last else ',' }}
{% endfor %}
  },
  "certificateAuthorities": {
{% for ca in allcas|selectattr('org', 'equalto', item)|list %}
    "{{ ca.name }}": {
      "url": "{{ tls|ternary('https','http') }}://{{ca.name}}:7054",
      "caName": "{{ ca.name }}",
      "httpOptions": {"verify": false},
      "registrar": [
            {
               "enrollId": "admin",
               "enrollSecret": "adminpw"
            }
        ]
    }{{ '' if loop.last else ',' }}
{% endfor %}
  }
} 
